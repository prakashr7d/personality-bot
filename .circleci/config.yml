version: 2.1

orbs:
  python: circleci/python@0.2.1


##################
# Job Definitions
##################

jobs:
  install-dependencies:
    working_directory: ~/workdir
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout

      - restore_cache:
          key: deps14-{{ checksum "Makefile" }}

      - run:
          name: BASH_ENV PATH
          command: echo "export PATH=$PATH:/home/circleci/.local/bin" >> $BASH_ENV

      - run:
          name: Install system requirements
          command: make bootstrap-user

      - save_cache:
          key: deps1-{{ checksum "Makefile" }}
          paths:
            - /home/circleci/.local

      - restore_cache:
          keys:
            - deps1-{{ checksum "poetry.lock" }}-{{ checksum "Makefile" }}

      - run:
          name: Install dependencies
          command: make poetry-setup


      - save_cache:
          key: deps1-{{ checksum "poetry.lock" }}-{{ checksum "Makefile" }}
          paths:
            - ".venv"

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - workdir
            - .local

  test:
    working_directory: ~/workdir
    docker:
      - image: circleci/python:3.7.7
    steps:
      - attach_workspace:
          at: /home/circleci

      - run:
          name: BASH_ENV PATH
          command: echo "export PATH=$PATH:/home/circleci/.local/bin" >> $BASH_ENV

      - run:
          name: Training
          command: make train

      - run:
          name: NLU Cross Validation
          command: PYTHONPATH=./src poetry run rasa test nlu

      - run:
          name: Testing
          command: PYTHONPATH=./src poetry run rasa test core

      - store_artifacts:
          path: ./results

  build-and-push:
    working_directory: ~/workdir
    docker:
      - image: circleci/python:3.7.7
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker

      - attach_workspace:
          at: /home/circleci

      - run:
          name: BASH_ENV PATH
          command: echo "export PATH=$PATH:/home/circleci/.local/bin" >> $BASH_ENV

      # with credentials stored in the UI
      - run:
          name: Login to ACR
          command: |
            docker login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD

      - run:
          name: Train a new prod model
          command: |
            poetry run rasa train --config configs/k8s/config.yml


      # build the application image
      - run:
          name: Build and push images
          command: make build-and-push-for-release VERSION="$(echo $CIRCLE_SHA1 | cut -c -7)"

  dev-deploy:
    working_directory: ~/workdir
    docker:
        - image: circleci/python:3.7.7
    steps:
      - checkout

      - run:
          name: Install system requirements
          command: make bootstrap-user

      - run:
          name: Login to Azure
          command: az login --service-principal -u "${AZ_APP_ID}" -p "${AZ_PASSWORD}" --tenant "${AZURE_TENANT_ID}"

      - run:
          name: Install Kubectl
          command: sudo az aks install-cli

      - run:
          name: Get AKS credentials
          command: az aks get-credentials --resource-group ${NS_BL_AKS_RG} --name ${NS_BL_AKS_NAME}

      - run:
          name: Deploy new service if any
          command: make deploy-all

      - run:
          name: Rollout latest version in dev
          command: make restart-rollout


############
# Workflows
############

workflows:
  version: 2
  build_test:
    jobs:
      - install-dependencies:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install-dependencies
          filters:
            tags:
              only: /.*/
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only: "main"
      - dev-deploy:
          requires:
            - build-and-push
          filters:
            branches:
              only: "main"
